{
	"info": {
		"_postman_id": "39ea19a8-fa1b-4853-8a4c-81b0488ae467",
		"name": "ThinkingCity APIs Basic Ops",
		"description": "A set with the basic API operations used by ThinkingCity platform, covering:\n\n* IDM & Auth\n* Orion Context Broker\n* Perseo CEP\n* CKAN\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "IDM & Auth",
			"item": [
				{
					"name": "Get auth token (service)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"postman.setGlobalVariable(\"TOKEN\",postman.getResponseHeader(\"X-Subject-Token\") );"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"auth\": {\r\n        \"identity\": {\r\n            \"methods\": [\r\n                \"password\"\r\n            ],\r\n            \"password\": {\r\n                \"user\": {\r\n                    \"domain\": {\r\n                        \"name\": \"{{SERVICE}}\"\r\n                    },\r\n                    \"name\": \"{{USER}}\",\r\n                    \"password\": \"{{PASSWORD}}\"\r\n                }\r\n            }\r\n        },\r\n        \"scope\": {\r\n            \"project\": {\r\n                \"domain\": {\r\n                    \"name\": \"{{SERVICE}}\"\r\n                },\r\n                \"name\": \"{{SUBSERVICE}}\"\r\n            }\r\n        }\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_KEYSTONE}}/v3/auth/tokens",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_KEYSTONE}}"
							],
							"path": [
								"v3",
								"auth",
								"tokens"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get auth token (subservice)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"postman.setGlobalVariable(\"TOKEN\",postman.getResponseHeader(\"X-Subject-Token\") );"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"auth\": {\n    \"scope\": {\n      \"project\": {\n        \"domain\": {\n          \"name\": \"{{SERVICE}}\"\n        },\n        \"name\": \"{{SUBSERVICE}}\"\n      }\n    },\n    \"identity\": {\n      \"password\": {\n        \"user\": {\n          \"domain\": {\n            \"name\": \"{{SERVICE}}\"\n          },\n          \"password\": \"{{PASSWORD}}\",\n          \"name\": \"{{USER}}\"\n        }\n      },\n      \"methods\": [\n        \"password\"\n      ]\n    }\n  }\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_KEYSTONE}}/v3/auth/tokens",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_KEYSTONE}}"
							],
							"path": [
								"v3",
								"auth",
								"tokens"
							]
						}
					},
					"response": []
				},
				{
					"name": "Renew token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"auth\": {\r\n        \"identity\": {\r\n             \"methods\": [\r\n                 \"token\"\r\n             ],\r\n            \"token\": {\r\n                \"id\": \"{{TOKEN}}\"\r\n            }\r\n        }\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_KEYSTONE}}/v3/auth/tokens",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_KEYSTONE}}"
							],
							"path": [
								"v3",
								"auth",
								"tokens"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user roles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"postman.setGlobalVariable(\"TOKEN\",postman.getResponseHeader(\"X-Subject-Token\") );"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"value": "{{TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_KEYSTONE}}/v3/users/a241a19fd3264dcc85d1e50b5f48a3cb/project_roles",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_KEYSTONE}}"
							],
							"path": [
								"v3",
								"users",
								"a241a19fd3264dcc85d1e50b5f48a3cb",
								"project_roles"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Orion Context Broker",
			"item": [
				{
					"name": "Get all types",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							}
						],
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CB}}/v2/types",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CB}}"
							],
							"path": [
								"v2",
								"types"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a single type",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							}
						],
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CB}}/v2/types/Vehicle",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CB}}"
							],
							"path": [
								"v2",
								"types",
								"Vehicle"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all entities",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							}
						],
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CB}}/v2/entities",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CB}}"
							],
							"path": [
								"v2",
								"entities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create entity",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\": \"myEntity\",\n\t\"type\": \"myType\",\n\t\"description\": {\n\t\t\"value\": \"My happy entity\",\n\t\t\"type\": \"Text\"\n\t},\n\t\"online\": {\n\t\t\"value\": true,\n\t\t\"type\": \"Boolean\"\n\t},\n\t\"temperature\": {\n\t\t\"value\": 42.3,\n\t\t\"type\": \"Number\"\n\t}\n}\n\t\t"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CB}}/v2/entities",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CB}}"
							],
							"path": [
								"v2",
								"entities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create entity (keyValues)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"CAM7\",\n    \"type\": \"VehiclesCounter\",\n    \"description\": \"Conteo de veh√≠culos\",\n    \"location\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n            -3.734511592,\n            40.297203367\n        ]\n    },\n    \"addressLocality\": \"Majadahonda\"\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CB}}/v2/entities?options=keyValues",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CB}}"
							],
							"path": [
								"v2",
								"entities"
							],
							"query": [
								{
									"key": "options",
									"value": "keyValues"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a single entity",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							}
						],
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CB}}/v2/entities/myEntity",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CB}}"
							],
							"path": [
								"v2",
								"entities",
								"myEntity"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update entity attributes (append & update)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"online\": {\n\t\t\"value\": false,\n\t\t\"type\": \"Boolean\"\n\t}\n}\n\t\t"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CB}}/v2/entities/myEntity/attrs",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CB}}"
							],
							"path": [
								"v2",
								"entities",
								"myEntity",
								"attrs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update entity attributes (strict update)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"online\": {\n\t\t\"value\": false,\n\t\t\"type\": \"Boolean\"\n\t}\n}\n\t\t"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CB}}/v2/entities/myEntity/attrs",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CB}}"
							],
							"path": [
								"v2",
								"entities",
								"myEntity",
								"attrs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update entity attributes (replace)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"description\": {\n\t\t\"value\": \"My even more happy entity\",\n\t\t\"type\": \"Text\"\n\t},\n\t\"status\": {\n\t\t\"value\": \"active\",\n\t\t\"type\": \"Text\"\n\t},\n\t\"humidity\": {\n\t\t\"value\": 61.23,\n\t\t\"type\": \"Number\"\n\t}\n}\t\t"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CB}}/v2/entities/myEntity/attrs",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CB}}"
							],
							"path": [
								"v2",
								"entities",
								"myEntity",
								"attrs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Batch creation/update",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"actionType\": \"append\",\n\t\"entities\": [\n\t\t{\n\t\t\t\"id\": \"myEntity1\",\n\t\t\t\"type\": \"myType\",\n\t\t\t\"description\": {\n\t\t\t\t\"value\": \"My happy entity\",\n\t\t\t\t\"type\": \"Text\"\n\t\t\t},\n\t\t\t\"online\": {\n\t\t\t\t\"value\": true,\n\t\t\t\t\"type\": \"Boolean\"\n\t\t\t},\n\t\t\t\"temperature\": {\n\t\t\t\t\"value\": 42.3,\n\t\t\t\t\"type\": \"Number\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"myEntity2\",\n\t\t\t\"type\": \"myType\",\n\t\t\t\"description\": {\n\t\t\t\t\"value\": \"My second happy entity\",\n\t\t\t\t\"type\": \"Text\"\n\t\t\t},\n\t\t\t\"online\": {\n\t\t\t\t\"value\": false,\n\t\t\t\t\"type\": \"Boolean\"\n\t\t\t},\n\t\t\t\"temperature\": {\n\t\t\t\t\"value\": -12,\n\t\t\t\t\"type\": \"Number\"\n\t\t\t}\n\t\t}\n\t]\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CB}}/v2/op/update",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CB}}"
							],
							"path": [
								"v2",
								"op",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a single entity",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CB}}/v2/entities/myEntity",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CB}}"
							],
							"path": [
								"v2",
								"entities",
								"myEntity"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get attribute",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							}
						],
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CB}}/v2/entities/myEntity/attrs/temperature",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CB}}"
							],
							"path": [
								"v2",
								"entities",
								"myEntity",
								"attrs",
								"temperature"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update attribute",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": \"Number\",\n    \"value\": -10.2\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CB}}/v2/entities/myEntity/attrs/temperature",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CB}}"
							],
							"path": [
								"v2",
								"entities",
								"myEntity",
								"attrs",
								"temperature"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete attribute",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CB}}/v2/entities/myEntity/attrs/temperature",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CB}}"
							],
							"path": [
								"v2",
								"entities",
								"myEntity",
								"attrs",
								"temperature"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get attribute value as text",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							}
						],
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CB}}/v2/entities/myEntity/attrs/description/value",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CB}}"
							],
							"path": [
								"v2",
								"entities",
								"myEntity",
								"attrs",
								"description",
								"value"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set attribute value as text",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "text/plain"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"New description\""
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CB}}/v2/entities/myEntity/attrs/description/value",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CB}}"
							],
							"path": [
								"v2",
								"entities",
								"myEntity",
								"attrs",
								"description",
								"value"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all subscriptions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							}
						],
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CB}}/v2/subscriptions",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CB}}"
							],
							"path": [
								"v2",
								"subscriptions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create subscription",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"description\": \"A subscription to get info about myEntity\",\r\n  \"subject\": {\r\n    \"entities\": [\r\n      {\r\n        \"id\": \"myEntity\",\r\n        \"type\": \"myType\"\r\n      }\r\n    ],\r\n    \"condition\": {\r\n      \"attrs\": [ ]\r\n    }\r\n  },\r\n  \"notification\": {\r\n    \"http\": {\r\n      \"url\": \"http://putsreq.com/aGSZ2hnoTXRaO4JHZNY1\"\r\n    },\r\n    \"attrs\": [\r\n      \"temperature\"\r\n    ]\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CB}}/v2/subscriptions",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CB}}"
							],
							"path": [
								"v2",
								"subscriptions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create subscription (custom notification)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"description\": \"A subscription to get info about myEntity\",\r\n  \"subject\": {\r\n    \"entities\": [\r\n      {\r\n        \"id\": \"myEntity\",\r\n        \"type\": \"myType\"\r\n      }\r\n    ],\r\n    \"condition\": {\r\n      \"attrs\": [ ]\r\n    }\r\n  },\r\n  \"notification\": {\r\n    \"httpCustom\": {\r\n      \"url\": \"http://putsreq.com/aGSZ2hnoTXRaO4JHZNY1\",\r\n      \"headers\": {\r\n      \t\"Content-Type\": \"application/xml\",\r\n      \t\"X-EntityType\": \"${type}\"\r\n      },\r\n      \"qs\": {\r\n      \t\"entityId\": \"${id}\"\r\n      },\r\n      \"payload\": \"%3Ctemperature%3E${temperature}%3C/temperature%3E\"\r\n    },\r\n    \"attrs\": [\r\n      \"temperature\"\r\n    ]\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CB}}/v2/subscriptions",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CB}}"
							],
							"path": [
								"v2",
								"subscriptions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create subscription (custom notification only header)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"Notificacion para vaciados\",\n  \"subject\": {\n    \"entities\": [\n      {\n        \"id\": \".*\",\n        \"type\": \"WasteContainer\"\n      }\n    ],\n    \"condition\": {\n      \"attrs\": [\n        \"TimeInstant\"\n      ]\n    }\n  },\n  \"notification\": {\n    \"httpCustom\": {\n      \"url\": \"http://putsreq.com/aGSZ2hnoTXRaO4JHZNY1\",\n        \"headers\": {\n          \"fiware-servicepath\": \"/emptyings\"  \n      }\n    },\n    \"attrs\": [\n      \"dateModified\", \"dateCalculatedEmptyings\", \"emptyingValue\", \"location\", \"storedWasteKind\", \"badEfficiency\", \"goodEfficiency\"\n    ]\n  }\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CB}}/v2/subscriptions",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CB}}"
							],
							"path": [
								"v2",
								"subscriptions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a single subscription",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							}
						],
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CB}}/v2/subscriptions/59e8c603779d7a40b18c714d",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CB}}"
							],
							"path": [
								"v2",
								"subscriptions",
								"59e8c603779d7a40b18c714d"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update subscription",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"status\": \"inactive\"\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CB}}/v2/subscriptions/59e8c603779d7a40b18c714d",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CB}}"
							],
							"path": [
								"v2",
								"subscriptions",
								"59e8c603779d7a40b18c714d"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a single subscription",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CB}}/v2/subscriptions/59e8c603779d7a40b18c714d",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CB}}"
							],
							"path": [
								"v2",
								"subscriptions",
								"59e8c603779d7a40b18c714d"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create registration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"dataProvided\": {\n    \"entities\": [\n      {\n        \"id\": \"Street4\",\n        \"type\": \"Street\"\n      }\n    ],\n    \"attrs\": [\n      \"temperature\"\n    ]\n  },\n  \"provider\": {\n    \"http\": {\n      \"url\": \"http://sensor48.mycity.com/v2\"\n    }\n  }\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CB}}/v2/registrations",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CB}}"
							],
							"path": [
								"v2",
								"registrations"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "IOTA",
			"item": [
				{
					"name": "Create group (JSON)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"groups\": [\r\n        {\r\n            \"apikey\": \"{{JSON_APIKEY}}\",\r\n            \"entity_type\": \"device\",\r\n            \"protocol\": [\r\n                \"IoTA-JSON\"\r\n            ]\r\n        }\r\n    ]\r\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/groups",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create group (JSON) attributes",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"groups\": [\r\n        {\r\n            \"apikey\": \"{{JSON_APIKEY}}\",\r\n            \"entity_type\": \"device\",\r\n            \"attributes\": [\r\n                {\r\n                    \"object_id\": \"t\",\r\n                    \"name\": \"temperature\",\r\n                    \"type\": \"Number\"\r\n                },\r\n                {\r\n                    \"object_id\": \"h\",\r\n                    \"name\": \"humidity\",\r\n                    \"type\": \"Number\"\r\n                }\r\n            ],\r\n            \"protocol\": [\r\n                \"IoTA-JSON\"\r\n            ]\r\n        }\r\n    ]\r\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/groups",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create group (JSON) stattic attributes",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"groups\": [\r\n        {\r\n            \"apikey\": \"{{JSON_APIKEY}}\",\r\n            \"entity_type\": \"device\",\r\n            \"static_attributes\": [\r\n                {\r\n                    \"name\": \"manufacturer\",\r\n                    \"type\": \"Text\",\r\n                    \"value\": \"TEF\"\r\n                }\r\n            ],\r\n            \"protocol\": [\r\n                \"IoTA-JSON\"\r\n            ]\r\n        }\r\n    ]\r\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/groups",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create group (JSON) explicit attrs",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"groups\": [\r\n        {\r\n            \"apikey\": \"{{JSON_APIKEY}}\",\r\n            \"entity_type\": \"device\",\r\n            \"explicitAttrs\": true,\r\n            \"attributes\": [\r\n                {\r\n                    \"object_id\": \"t\",\r\n                    \"name\": \"temperature\",\r\n                    \"type\": \"Number\"\r\n                },\r\n                {\r\n                    \"object_id\": \"h\",\r\n                    \"name\": \"humidity\",\r\n                    \"type\": \"Number\"\r\n                }\r\n            ],\r\n            \"protocol\": [\r\n                \"IoTA-JSON\"\r\n            ]\r\n        }\r\n    ]\r\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/groups",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create group (JSON) timestamp",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"groups\": [\r\n        {\r\n            \"apikey\": \"{{JSON_APIKEY}}\",\r\n            \"entity_type\": \"device\",\r\n            \"timestamp\": true,\r\n            \"protocol\": [\r\n                \"IoTA-JSON\"\r\n            ]\r\n        }\r\n    ]\r\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/groups",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create group (JSON) expression",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"groups\": [\n        {\n            \"apikey\": \"{{JSON_APIKEY}}\",\n            \"entity_type\": \"device\",\n            \"attributes\": [\n                {\n                    \"object_id\": \"t\",\n                    \"name\": \"temperature\",\n                    \"type\": \"float\",\n                    \"entity_name\": \"WaterMeter02\",\n                    \"entity_type\": \"WaterMeter\",\n                    \"expression\": \"${@temperature * 100}\"\n                },\n                {\n                    \"object_id\": \"h\",\n                    \"name\": \"humidity\",\n                    \"type\": \"float\",\n                    \"entity_name\": \"WaterMeter02\",\n                    \"entity_type\": \"WaterMeter\"\n                }\n            ],\n            \"protocol\": [\n                \"IoTA-JSON\"\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/groups",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create group (JSON) JEXL expression",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"groups\": [\n        {\n            \"apikey\": \"{{JSON_APIKEY}}\",\n            \"entity_type\": \"device\",\n            \"attributes\": [\n                {\n                    \"object_id\": \"t\",\n                    \"name\": \"temperature\",\n                    \"type\": \"Number\",\n                    \"expression\": \"@t == 6? true : false\"\n                }\n            ],\n            \"protocol\": [\n                \"IoTA-JSON\"\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/groups",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create group (JSON) commands",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"groups\": [\r\n    {\r\n      \"apikey\": \"{{JSON_APIKEY}}\",\r\n      \"entity_type\": \"device\",\r\n      \"protocol\": \"IoTA-JSON\",\r\n      \"commands\": [\r\n      \t{ \"object_id\": \"r\", \"name\": \"reset\", \"type\": \"string\" }\r\n      ]       \r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/groups",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create group (UL)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"groups\": [\r\n        {\r\n            \"apikey\": \"{{UL_APIKEY}}\",\r\n            \"entity_type\": \"device\",\r\n            \"protocol\": [\r\n                \"IoTA-UL\"\r\n            ]\r\n        }\r\n    ]\r\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/groups",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create group (UL) attributes",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"groups\": [\r\n    {\r\n      \"apikey\": \"{{UL_APIKEY}}\",\r\n      \"entity_type\": \"device\",\r\n      \"attributes\": [\r\n        { \"object_id\": \"t\", \"name\": \"temperature\", \"type\": \"float\" },\r\n        { \"object_id\": \"h\", \"name\": \"humidity\", \"type\": \"float\" }\r\n      ],\r\n      \"protocol\": [ \"IoTA-UL\" ]\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/groups",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create group (UL) static attributes",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"groups\": [\r\n    {\r\n      \"apikey\": \"{{UL_APIKEY}}\",\r\n      \"entity_type\": \"device\",\r\n      \"static_attributes\": [\r\n        { \"name\": \"deviceFamily\", \"type\": \"integer\", \"value\": \"02598347\" }\r\n      ],\r\n      \"protocol\": [ \"IoTA-UL\" ]\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/groups",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create group (UL) expression",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"groups\": [\n        {\n            \"apikey\": \"{{UL_APIKEY}}\",\n            \"entity_type\": \"parking\",\n            \"attributes\": [\n                {\n                    \"expression\": \"${(@plazasOcupadas / @plazasTotal) * 100}\",\n                    \"type\": \"Number\",\n                    \"name\": \"plazasPorcentaje\"\n                }\n            ],\n            \"protocol\": [\n                \"IoTA-UL\"\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/groups",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete group (JSON)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "x-auth-token",
								"value": "{{TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/groups?protocol=IoTA-JSON&apikey={{JSON_APIKEY}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"groups"
							],
							"query": [
								{
									"key": "protocol",
									"value": "IoTA-JSON"
								},
								{
									"key": "apikey",
									"value": "{{JSON_APIKEY}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete group (UL)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "x-auth-token",
								"value": "{{TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/groups?protocol=IoTA-UL&apikey={{UL_APIKEY}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"groups"
							],
							"query": [
								{
									"key": "protocol",
									"value": "IoTA-UL"
								},
								{
									"key": "apikey",
									"value": "{{UL_APIKEY}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all groups",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							}
						],
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/groups",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create device (JSON)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"devices\": [\r\n        {\r\n            \"device_id\": \"dev1json\",\r\n            \"entity_name\": \"entity1json\",\r\n            \"entity_type\": \"devicejson\",\r\n            \"apikey\": \"{{JSON_APIKEY}}\",\r\n            \"protocol\": \"IoTA-JSON\"\r\n        }\r\n    ]\r\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/devices",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create device (JSON) attributes",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"devices\": [\r\n        {\r\n            \"device_id\": \"dev2json\",\r\n            \"entity_name\": \"entity2json\",\r\n            \"entity_type\": \"devicejson\",\r\n            \"apikey\": \"{{JSON_APIKEY}}\",\r\n            \"attributes\": [\r\n                {\r\n                    \"object_id\": \"w\",\r\n                    \"name\": \"power\",\r\n                    \"type\": \"Number\"\r\n                },\r\n                {\r\n                    \"object_id\": \"e\",\r\n                    \"name\": \"electricPotential\",\r\n                    \"type\": \"Number\"\r\n                }\r\n            ],\r\n            \"protocol\": \"IoTA-JSON\"\r\n        }\r\n    ]\r\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/devices",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create device (JSON) static attributes",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"devices\": [\r\n        {\r\n            \"device_id\": \"dev3json\",\r\n            \"entity_name\": \"entity3json\",\r\n            \"entity_type\": \"devicejson\",\r\n            \"static_attributes\": [\r\n                {\r\n                    \"name\": \"partNumber\",\r\n                    \"type\": \"Text\",\r\n                    \"value\": \"2136721\"\r\n                }\r\n            ],\r\n            \"protocol\": \"IoTA-JSON\"\r\n        }\r\n    ]\r\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/devices",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create device (JSON) explicit attributes",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"devices\": [\r\n        {\r\n            \"device_id\": \"dev4json\",\r\n            \"entity_name\": \"entity4json\",\r\n            \"entity_type\": \"devicejson\",\r\n            \"apikey\": \"{{JSON_APIKEY}}\",\r\n            \"explicitAttrs\": true,\r\n            \"attributes\": [\r\n                {\r\n                    \"object_id\": \"w\",\r\n                    \"name\": \"power\",\r\n                    \"type\": \"Number\"\r\n                },\r\n                {\r\n                    \"object_id\": \"e\",\r\n                    \"name\": \"electricPotential\",\r\n                    \"type\": \"Number\"\r\n                }\r\n            ],\r\n            \"protocol\": \"IoTA-JSON\"\r\n        }\r\n    ]\r\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/devices",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create device (JSON) multientity plugin",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "fiware-service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "fiware-servicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "x-auth-token",
								"value": "{{TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"devices\": [\n        {\n            \"protocol\": \"IoTA-JSON\",\n            \"entity_name\": \"contador12\",\n            \"entity_type\": \"multientity\",\n            \"apikey\": \"{{JSON_APIKEY}}\",\n            \"attributes\": [\n                {\n                    \"object_id\": \"cont1\",\n                    \"name\": \"vol\",\n                    \"type\": \"string\",\n                    \"entity_name\": \"WaterMeterSoria01\",\n                    \"entity_type\": \"WaterMeter\"\n                },\n                {\n                    \"object_id\": \"cont2\",\n                    \"name\": \"vol\",\n                    \"type\": \"string\",\n                    \"entity_name\": \"WaterMeterSoria02\",\n                    \"entity_type\": \"WaterMeter\"\n                },\n                {\n                    \"object_id\": \"cont3\",\n                    \"name\": \"vol\",\n                    \"type\": \"string\",\n                    \"entity_name\": \"WaterMeterSoria03\",\n                    \"entity_type\": \"WaterMeter\"\n                }\n            ],\n            \"device_id\": \"test99\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/devices",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create device (JSON) expression plugin",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "fiware-service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "fiware-servicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "x-auth-token",
								"value": "{{TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"devices\": [\n        {\n            \"device_id\": \"testmulti\",\n            \"protocol\": \"IoTA-JSON\",\n            \"entity_name\": \"testmulti\",\n            \"entity_type\": \"device\",\n            \"attributes\": [\n                {\n                    \"object_id\": \"cont1\",\n                    \"name\": \"vol\",\n                    \"type\": \"string\",\n                    \"expression\": \"${@vol*100}\",\n                    \"entity_name\": \"WaterMeterSoria01\",\n                    \"entity_type\": \"WaterMeter\"\n                },\n                {\n                    \"object_id\": \"cont2\",\n                    \"name\": \"vol\",\n                    \"type\": \"string\",\n                    \"expression\": \"${@vol*100}\",\n                    \"entity_name\": \"WaterMeterSoria02\",\n                    \"entity_type\": \"WaterMeter\"\n                },\n                {\n                    \"object_id\": \"cont3\",\n                    \"name\": \"vol\",\n                    \"type\": \"string\",\n                    \"expression\": \"${@vol*100}\",\n                    \"entity_name\": \"WaterMeterSoria03\",\n                    \"entity_type\": \"WaterMeter\"\n                }\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/devices",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create device (JSON) multientity + expression plugin",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "fiware-service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "fiware-servicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "x-auth-token",
								"value": "{{TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"devices\": [\n        {\n            \"device_id\": \"testmulti\",\n            \"protocol\": \"IoTA-JSON\",\n            \"entity_name\": \"testmulti\",\n            \"entity_type\": \"device\",\n            \"attributes\": [\n                {\n                    \"object_id\": \"cont1\",\n                    \"name\": \"vol\",\n                    \"type\": \"string\",\n                    \"expression\": \"${@vol*100}\",\n                    \"entity_name\": \"WaterMeterSoria01\",\n                    \"entity_type\": \"WaterMeter\"\n                },\n                {\n                    \"object_id\": \"cont2\",\n                    \"name\": \"vol\",\n                    \"type\": \"string\",\n                    \"expression\": \"${@vol*100}\",\n                    \"entity_name\": \"WaterMeterSoria02\",\n                    \"entity_type\": \"WaterMeter\"\n                },\n                {\n                    \"object_id\": \"cont3\",\n                    \"name\": \"vol\",\n                    \"type\": \"string\",\n                    \"expression\": \"${@vol*100}\",\n                    \"entity_name\": \"WaterMeterSoria03\",\n                    \"entity_type\": \"WaterMeter\"\n                }\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/devices",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create device (JSON) JEXL",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "fiware-service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "fiware-servicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "x-auth-token",
								"value": "{{TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"devices\": [\n        {\n            \"device_id\": \"device006\",\n            \"protocol\": \"IoTA-JSON\",\n            \"entity_name\": \"device006\",\n            \"entity_type\": \"device\",\n            \"apikey\": \"{{JSON_APIKEY}}\",\n            \"expressionLanguage\": \"jexl\",\n            \"attributes\": [\n                {\n                    \"name\": \"location\",\n                    \"type\": \"geo:json\",\n                    \"expression\": \"{type:\\\"Point\\\",coordinates: [lat, long]}\"\n                },\n                {\n                    \"name\": \"lat\",\n                    \"type\": \"Number\"\n                },\n                {\n                    \"name\": \"long\",\n                    \"type\": \"Number\"\n                }\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/devices",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create device (JSON) JEXL2",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "fiware-service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "fiware-servicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "x-auth-token",
								"value": "{{TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"devices\": [\n        {\n            \"device_id\": \"device007\",\n            \"protocol\": \"IoTA-JSON\",\n            \"entity_name\": \"device007\",\n            \"entity_type\": \"device\",\n            \"expressionLanguage\": \"jexl\",\n            \"apikey\": \"{{JSON_APIKEY}}\",\n            \"attributes\": [\n                {\n                    \"name\": \"location\",\n                    \"type\": \"geo:json\",\n                    \"expression\": \"lat && long ?{type:'Point',coordinates: [lat, long]}:{type:'Point',coordinates: [0, 0]}\"\n                },\n                {\n                    \"name\": \"lat\",\n                    \"type\": \"Number\"\n                },\n                {\n                    \"name\": \"long\",\n                    \"type\": \"Number\"\n                }\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/devices",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create device (JSON) JEXL operador ternario",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "fiware-service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "fiware-servicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "x-auth-token",
								"value": "{{TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"devices\": [\n        {\n            \"device_id\": \"device008\",\n            \"protocol\": \"IoTA-JSON\",\n            \"entity_name\": \"device008\",\n            \"entity_type\": \"device\",\n            \"expressionLanguage\": \"jexl\",\n            \"apikey\": \"{{JSON_APIKEY}}\",\n            \"attributes\": [\n                {\n                    \"name\": \"alarma\",\n                    \"type\": \"Text\",\n                    \"expression\": \"v>10?'Umbral alto':'Umbral bajo'\"\n                },\n                {\n                    \"name\": \"v\",\n                    \"type\": \"Number\"\n                }\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/devices",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create device (JSON) push command",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"devices\": [\r\n    {\r\n      \"device_id\": \"dev1json\", \r\n      \"entity_name\": \"entity1json\", \r\n      \"entity_type\": \"devicejson\",\r\n      \"commands\": [\r\n      \t{ \"object_id\": \"r\", \"name\": \"reset\", \"type\": \"string\" }\r\n      ],\r\n      \"endpoint\": \"http://foo.bar:999\",\r\n      \"protocol\": \"IoTA-JSON\"\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/devices",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create device (JSON) expresion",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "fiware-service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "fiware-servicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "x-auth-token",
								"value": "{{TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"protocol\" : \"IoTA-JSON\",\n    \"name\" : \"entidadprueba\",\n    \"type\" : \"Water\",\n    \"id\" : \"prueba\",\n    \"attributes\" : [ \n        {\n            \"expression\" : \"${@turbidity*100}\",\n            \"type\" : \"number\",\n            \"name\" : \"turbidity\",\n            \"object_id\" : \"tss\"\n        }, \n        {\n            \"expression\" : \"${@temperature*17.14-14}\",\n            \"type\" : \"number\",\n            \"name\" : \"temperature\",\n            \"object_id\" : \"temp\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/devices",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create device (UL)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"devices\": [\r\n        {\r\n            \"device_id\": \"dev1ul\",\r\n            \"entity_name\": \"entity1ul\",\r\n            \"entity_type\": \"deviceul\",\r\n            \"protocol\": \"IoTA-UL\"\r\n        }\r\n    ]\r\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/devices",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create device (UL) attributes",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"devices\": [\r\n        {\r\n            \"device_id\": \"dev1ul\",\r\n            \"entity_name\": \"entity1ul\",\r\n            \"entity_type\": \"deviceul\",\r\n            \"attributes\": [\r\n                {\r\n                    \"object_id\": \"w\",\r\n                    \"name\": \"power\",\r\n                    \"type\": \"float\"\r\n                },\r\n                {\r\n                    \"object_id\": \"e\",\r\n                    \"name\": \"electricPotential\",\r\n                    \"type\": \"float\"\r\n                }\r\n            ],\r\n            \"static_attributes\": [\r\n                {\r\n                    \"name\": \"serialNumber\",\r\n                    \"type\": \"Integer\",\r\n                    \"value\": \"2136721\"\r\n                }\r\n            ],\r\n            \"lazy\": [\r\n                {\r\n                    \"object_id\": \"p\",\r\n                    \"name\": \"pressure\",\r\n                    \"type\": \"percentage\"\r\n                }\r\n            ],\r\n            \"commands\": [\r\n                {\r\n                    \"object_id\": \"r\",\r\n                    \"name\": \"reset\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"endpoint\": \"http://foo.bar:999\",\r\n            \"protocol\": \"IoTA-UL\"\r\n        }\r\n    ]\r\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/devices",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create device (UL) multientity plugin",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "fiware-service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "fiware-servicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "x-auth-token",
								"value": "{{TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"devices\": [\n    {\n      \"protocol\": \"IoTA-UL\",\n      \"entity_name\": \"contador12\",\n      \"entity_type\": \"multientity\",\n      \"attributes\": [\n        {\n          \"object_id\": \"cont1\",\n          \"name\": \"vol\",\n          \"type\": \"string\",\n          \"entity_name\": \"WaterMeterSoria01\",\n          \"entity_type\": \"WaterMeter\"\n        },\n        {\n          \"object_id\": \"cont2\",\n          \"name\": \"vol\",\n          \"type\": \"string\",\n          \"entity_name\": \"WaterMeterSoria02\",\n          \"entity_type\": \"WaterMeter\"\n        },\n        {\n          \"object_id\": \"cont3\",\n          \"name\": \"vol\",\n          \"type\": \"string\",\n          \"entity_name\": \"WaterMeterSoria03\",\n          \"entity_type\": \"WaterMeter\"\n        }\n      ],\n      \"device_id\": \"test99\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/devices",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create device (UL) multientity + expression plugin",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "fiware-service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "fiware-servicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "x-auth-token",
								"value": "{{TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"devices\": [\n    {\n      \"device_id\": \"testmulti\",\n      \"protocol\": \"IoTA-JSON\",\n      \"entity_name\": \"testmulti\",\n      \"entity_type\": \"device\",\n      \"expressionLanguage\": \"jexl\",\n      \"attributes\": [\n        {\n          \"object_id\": \"cont1\",\n          \"name\": \"vol\",\n          \"type\": \"string\",\n          \"expression\" : \"${@vol*100}\",\n          \"entity_name\": \"WaterMeterSoria01\",\n          \"entity_type\": \"WaterMeter\"\n        },\n        {\n          \"object_id\": \"cont2\",\n          \"name\": \"vol\",\n          \"type\": \"string\",\n          \"expression\" : \"${@vol*100}\",\n          \"entity_name\": \"WaterMeterSoria02\",\n          \"entity_type\": \"WaterMeter\"\n        },\n        {\n          \"object_id\": \"cont3\",\n          \"name\": \"vol\",\n          \"type\": \"string\",\n          \"expression\" : \"${@vol*100}\",\n          \"entity_name\": \"WaterMeterSoria03\",\n          \"entity_type\": \"WaterMeter\"\n        }\n      ]\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/devices",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create device (UL) expression",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "fiware-service",
								"value": "{{servicio}}"
							},
							{
								"key": "fiware-servicePath",
								"value": "{{subservicio}}"
							},
							{
								"key": "x-auth-token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"devices\": [{\n        \"device_id\": \"test925\",\n        \"protocol\": \"IoTA-UL\",\n        \"entity_name\": \"test925\",\n        \"entity_type\": \"thing\",\n        \"attributes\": [{\n            \"expression\" : \"${98+(3820/(@battery-14.21))*2.718281828^(8/(@battery-14.21))}\",\n            \"type\" : \"number\",\n            \"name\" : \"batteria\"\n        }]\n    }]\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/devices",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete device (JSON)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/devices/dev1json?protocol=IoTA-JSON",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"devices",
								"dev1json"
							],
							"query": [
								{
									"key": "protocol",
									"value": "IoTA-JSON"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete device (UL)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/devices/dev1ul?protocol=IoTA-UL",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"devices",
								"dev1ul"
							],
							"query": [
								{
									"key": "protocol",
									"value": "IoTA-UL"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all devices",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							}
						],
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/devices",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all devices (JSON)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							}
						],
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/devices?protocol=IoTA-JSON",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"devices"
							],
							"query": [
								{
									"key": "protocol",
									"value": "IoTA-JSON"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all devices (UL)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							}
						],
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/devices?protocol=IoTA-UL",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"devices"
							],
							"query": [
								{
									"key": "protocol",
									"value": "IoTA-UL"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a device by id (JSON)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							}
						],
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/devices/dev1json?protocol=IoTA-JSON",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"devices",
								"dev1json"
							],
							"query": [
								{
									"key": "protocol",
									"value": "IoTA-JSON"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a device by id (UL)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							}
						],
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/devices/dev1ul?protocol=IoTA-UL",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"devices",
								"dev1ul"
							],
							"query": [
								{
									"key": "protocol",
									"value": "IoTA-UL"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Send measure (JSON)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"t\": 16,\r\n  \"h\": 34\r\n}"
						},
						"url": {
							"raw": "http://{{ENDPOINT_IOTA_JSON_HTTP}}/iot/json?i=farola1&k={{JSON_APIKEY}}",
							"protocol": "http",
							"host": [
								"{{ENDPOINT_IOTA_JSON_HTTP}}"
							],
							"path": [
								"iot",
								"json"
							],
							"query": [
								{
									"key": "i",
									"value": "farola1"
								},
								{
									"key": "k",
									"value": "{{JSON_APIKEY}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Send measure (UL)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{ENDPOINT_IOTA_UL_HTTP}}/iot/d?i=dev1ul&k={{UL_APIKEY}}&d=w|42|e|24",
							"protocol": "http",
							"host": [
								"{{ENDPOINT_IOTA_UL_HTTP}}"
							],
							"path": [
								"iot",
								"d"
							],
							"query": [
								{
									"key": "i",
									"value": "dev1ul"
								},
								{
									"key": "k",
									"value": "{{UL_APIKEY}}"
								},
								{
									"key": "d",
									"value": "w|42|e|24"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Send measure (UL) POST",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "2018-01-01T00:00:00|t|2|r|3#2018-01-02T00:00:00|t|1|r|4\n"
						},
						"url": {
							"raw": "http://{{ENDPOINT_IOTA_UL_HTTP}}/iot/d?i=cart1&k={{UL_APIKEY}}",
							"protocol": "http",
							"host": [
								"{{ENDPOINT_IOTA_UL_HTTP}}"
							],
							"path": [
								"iot",
								"d"
							],
							"query": [
								{
									"key": "i",
									"value": "cart1"
								},
								{
									"key": "k",
									"value": "{{UL_APIKEY}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Send command",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "fiware-service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "fiware-servicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "x-auth-token",
								"value": "{{TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"value\": \"1\",\n  \"type\": \"command\"\n}\n"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CB}}/v2/entities/test777/attrs/reset?type=thing",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CB}}"
							],
							"path": [
								"v2",
								"entities",
								"test777",
								"attrs",
								"reset"
							],
							"query": [
								{
									"key": "type",
									"value": "thing"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Send command (with params)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "fiware-service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "fiware-servicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "x-auth-token",
								"value": "{{TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"value\": { \"param1\": \"val1\", \"param2\": \"val2\" },\n  \"type\": \"command\"\n}\n"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CB}}/v2/entities/vigo102/attrs/encender?type=Streetlight",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CB}}"
							],
							"path": [
								"v2",
								"entities",
								"vigo102",
								"attrs",
								"encender"
							],
							"query": [
								{
									"key": "type",
									"value": "Streetlight"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve command JSON HTTP",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://{{ENDPOINT_IOTA_JSON_HTTP}}/iot/json?k={{JSON_APIKEY}}&i=test777&getCmd=1",
							"protocol": "http",
							"host": [
								"{{ENDPOINT_IOTA_JSON_HTTP}}"
							],
							"path": [
								"iot",
								"json"
							],
							"query": [
								{
									"key": "k",
									"value": "{{JSON_APIKEY}}"
								},
								{
									"key": "i",
									"value": "test777"
								},
								{
									"key": "getCmd",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve command UL HTTP",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{ENDPOINT_IOTA_UL_HTTP}}/iot/d?k=zxcva3wuhrlune2drj937abcd&i=test77&getCmd=1",
							"protocol": "http",
							"host": [
								"{{ENDPOINT_IOTA_UL_HTTP}}"
							],
							"path": [
								"iot",
								"d"
							],
							"query": [
								{
									"key": "k",
									"value": "zxcva3wuhrlune2drj937abcd"
								},
								{
									"key": "i",
									"value": "test77"
								},
								{
									"key": "getCmd",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Response to command JSON HTTP",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"reset\": \"Comando reset ejecutado OK\"}"
						},
						"url": {
							"raw": "http://{{ENDPOINT_IOTA_JSON_HTTP}}/iot/json/commands?k={{JSON_APIKEY}}&i=test777",
							"protocol": "http",
							"host": [
								"{{ENDPOINT_IOTA_JSON_HTTP}}"
							],
							"path": [
								"iot",
								"json",
								"commands"
							],
							"query": [
								{
									"key": "k",
									"value": "{{JSON_APIKEY}}"
								},
								{
									"key": "i",
									"value": "test777"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Response to command UL HTTP",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "test77@ping|ping OK"
						},
						"url": {
							"raw": "http://{{ENDPOINT_IOTA_UL_HTTP}}/iot/d?k=zxcva3wuhrlune2drj937abcd&i=test77",
							"protocol": "http",
							"host": [
								"{{ENDPOINT_IOTA_UL_HTTP}}"
							],
							"path": [
								"iot",
								"d"
							],
							"query": [
								{
									"key": "k",
									"value": "zxcva3wuhrlune2drj937abcd"
								},
								{
									"key": "i",
									"value": "test77"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CREATE DEVICE (push command ul)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "fiware-service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "fiware-servicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "x-auth-token",
								"value": "{{TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"devices\": [{\n        \"device_id\": \"test26\",\n        \"protocol\": \"IoTA-UL\",\n        \"entity_name\": \"test26\",\n        \"entity_type\": \"thing\",\n        \"transport\":\"HTTP\",\n        \"endpoint\": \"http://10.0.0.24:6500\",\n        \"commands\": [{\n            \"name\": \"ping\",\n            \"type\": \"command\"\n        }]\n    }]\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/devices",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "CREATE DEVICE (push command json)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "fiware-service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "fiware-servicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "x-auth-token",
								"value": "{{TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"devices\": [\n        {\n            \"device_id\": \"test126\",\n            \"protocol\": \"IoTA-JSON\",\n            \"entity_name\": \"test126\",\n            \"entity_type\": \"thing\",\n            \"transport\": \"HTTP\",\n            \"endpoint\": \"http://10.0.0.24:6500\",\n            \"commands\": [\n                {\n                    \"name\": \"ping\",\n                    \"type\": \"command\"\n                }\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ENDPOINT_IOTAM}}/iot/devices",
							"protocol": "https",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "CREATE DEVICE (pull command ul)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "fiware-service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "fiware-servicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "x-auth-token",
								"value": "{{TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"devices\": [\n        {\n            \"device_id\": \"test77\",\n            \"protocol\": \"IoTA-UL\",\n            \"entity_name\": \"test77\",\n            \"entity_type\": \"thing\",\n            \"transport\": \"HTTP\",\n            \"commands\": [\n                {\n                    \"name\": \"ping\",\n                    \"type\": \"command\"\n                }\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/devices",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "CREATE DEVICE (pull command json)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "fiware-service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "fiware-servicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "x-auth-token",
								"value": "{{TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"devices\": [\n        {\n            \"device_id\": \"test777\",\n            \"protocol\": \"IoTA-JSON\",\n            \"entity_name\": \"test777\",\n            \"entity_type\": \"thing\",\n            \"apikey\": \"{{JSON_APIKEY}}\",\n            \"transport\": \"HTTP\",\n            \"commands\": [\n                {\n                    \"name\": \"reset\",\n                    \"type\": \"command\"\n                }\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/devices",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "CREATE DEVICE (mqtt commnad ul)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "fiware-service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "fiware-servicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "x-auth-token",
								"value": "{{TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"devices\": [{\n        \"device_id\": \"test77\",\n        \"protocol\": \"IoTA-UL\",\n        \"entity_name\": \"test77\",\n        \"entity_type\": \"thing\",\n        \"transport\":\"MQTT\",\n        \"commands\": [{\n            \"name\": \"ping\",\n            \"type\": \"command\"\n        }]\n    }]\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/devices",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "CREATE DEVICE (mqtt command json)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "fiware-service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "fiware-servicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "x-auth-token",
								"value": "{{TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"devices\": [{\n        \"device_id\": \"test101\",\n        \"protocol\": \"IoTA-JSON\",\n        \"entity_name\": \"test101\",\n        \"entity_type\": \"thing\",\n        \"transport\":\"MQTT\",\n        \"commands\": [{\n            \"name\": \"auto\",\n            \"type\": \"command\"\n        }]\n    }]\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/devices",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "CREATE DEVICE (push command lwm2m)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "fiware-service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "fiware-servicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "x-auth-token",
								"value": "{{TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"devices\": [{\n        \"device_id\": \"testlw\",\n        \"protocol\": \"IoTA-LWM2M\",\n        \"entity_name\": \"testlw\",\n        \"entity_type\": \"thing\",\n        \"transport\":\"HTTP\",\n        \"endpoint\": \"http://10.0.0.24:6500\",\n        \"commands\": [{\n            \"name\": \"ping\",\n            \"type\": \"command\"\n        }]\n    }]\n}"
						},
						"url": {
							"raw": "https://{{ENDPOINT_IOTAM}}/iot/devices",
							"protocol": "https",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "CREATE DEVICE (pull command lwm2m)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "fiware-service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "fiware-servicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "x-auth-token",
								"value": "{{TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"devices\": [{\n        \"device_id\": \"testlw77\",\n        \"protocol\": \"IoTA-LWM2M\",\n        \"entity_name\": \"testlw77\",\n        \"entity_type\": \"thing\",\n        \"commands\": [{\n            \"name\": \"ping\",\n            \"type\": \"command\"\n        }]\n    }]\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/devices",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Modification device",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"static_attributes\": [\n                {\n                    \"name\": \"location\",\n                    \"type\": \"geo:json\",\n                    \"value\": {\n                        \"type\": \"Point\",\n                        \"coordinates\": [\n                            -0.038202,\n                            39.976196\n                        ]\n                    }\n                }\n            ]\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_IOTAM}}/iot/devices/PA-VILL-ALU-004?protocol=IoTA-JSON",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_IOTAM}}"
							],
							"path": [
								"iot",
								"devices",
								"PA-VILL-ALU-004"
							],
							"query": [
								{
									"key": "protocol",
									"value": "IoTA-JSON"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Perseo CEP",
			"item": [
				{
					"name": "Create simple rule (email)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"enviaemail\",\r\n    \"text\": \"select *, temperature?, mantenedor?, getNextSunset(java.util.Calendar.getInstance(),37.9, -1.1).format(\\\"yyyy-MM-dd'T'HH:mm:ss.SSSX\\\") as sunset from iotEvent where cast(cast(temperature?, String),float) >= 20 \",\r\n\t\"action\": {\r\n        \"type\": \"email\",\r\n        \"template\": \"La temperatura de la entidad ${id} es ${temperature}. El ocaso ser√° a las ${sunset}\",\r\n        \"parameters\": {\r\n            \"to\": \"${mantenedor}\",\r\n            \"from\": \"soporte@urbo2.es\",\r\n            \"subject\": \"Temperatura de la entidad ${id}\"\r\n        }\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CEP}}/rules",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CEP}}"
							],
							"path": [
								"rules"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create simple rule (entity update)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"entityupdate\",\r\n    \"text\": \"select *, humidity? from iotEvent where type?='devicejson' AND cast(cast(humidity?, String), float)<20\",\r\n\t\"action\": {\r\n        \"type\": \"update\",\r\n        \"parameters\": {\r\n            \"id\": \"TestEntity2\",\r\n            \"type\": \"TestEntity\",\r\n            \"attributes\": [\r\n            \t{\r\n            \t\t\"name\": \"msg\",\r\n            \t\t\"value\": \"Humedad en ${id} es ${humidity}\"\r\n            \t}\r\n            ]\r\n        }\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CEP}}/rules",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CEP}}"
							],
							"path": [
								"rules"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create simple rule (action POST)",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "fiware-servicepath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "x-auth-token",
								"value": "{{TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"postaction3\",\n    \"text\": \"select *, temperature?  from iotEvent where cast(cast(temperature?, String),float) >= 20\",\n    \"action\": [\n        {\n            \"type\": \"post\",\n            \"template\": \"La temperatura es ${temperature} grados.\",\n            \"parameters\": {\n                \"url\": \"https://enauzlunp3tcc.x.pipedream.net/${id}\",\n                \"method\": \"PUT\",\n                \"headers\": {\n                    \"Content-type\": \"application/json\",\n                    \"fiware-service\": \"${service}\",\n                    \"fiware-servicepath\": \"${subservice}\"\n                },\n                \"qs\": {\"type\": \"${type}\"}\n            }\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CEP}}/rules",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CEP}}"
							],
							"path": [
								"rules"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create simple rule (multiple actions)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"accionmultiple\",\n    \"text\": \"select *, temperature?, mantenedor? from iotEvent where cast(cast(temperature?, String),float) >= 20\",\n    \"action\": [\n        {\n        \"type\": \"update\",\n        \"parameters\": {\n            \"id\": \"TestEntity3\",\n            \"type\": \"TestEntity\",\n            \"attributes\": [\n            \t{\n            \t\t\"name\": \"msg\",\n            \t\t\"value\": \"La temperature de ${id} es ${temperature}\"\n            \t}\n            ]\n        }\n    },\n        {\n        \"type\": \"email\",\n        \"template\": \"La temperatura de la entidad ${id} es ${temperature}\",\n        \"parameters\": {\n            \"to\": \"${mantenedor}\",\n            \"from\": \"soporte@urbo2.es\",\n            \"subject\": \"[ACCION MULTIPLE] Temperatura de la entidad ${id}\"\n        }\n    },\n        {\n            \"type\": \"sms\",\n            \"template\": \"Accion multiple. La temperatura de ${id} es ${temperature}\",\n            \"parameters\": {\n                \"to\": \"+34679245010\"\n            }\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CEP}}/rules",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CEP}}"
							],
							"path": [
								"rules"
							]
						},
						"description": "Adds a rule to CEP"
					},
					"response": []
				},
				{
					"name": "Create simple rule (entity update multiple entities)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"cambia_modo_cuadro\",\r\n    \"description\": \"Cambia el modo de las luminarias de un cuadro\",\r\n    \"text\": \"select \\\"cambia_modo_cuadro\\\" as ruleName, *, setWorkingMode? as mode, current_timestamp().format(\\\"yyyy-MM-dd'T'HH:mm:ss.SSSX\\\") as timeinstant from iotEvent where type = 'StreetlightControlCabinet' and setWorkingMode? is not null\",\r\n    \"action\": [\r\n        {\r\n            \"type\": \"update\",\r\n            \"parameters\": {\r\n                \"actionType\": \"UPDATE\",\r\n                \"filter\": {\r\n                    \"type\": \"Streetlight\",\r\n                    \"q\": \"refStreetlightControlCabinet:${id};status:ok\"\r\n                },\r\n                \"version\": 2,\r\n                \"attributes\": [\r\n                    {\r\n                        \"name\": \"setWorkingMode\",\r\n                        \"type\": \"Command\",\r\n                        \"value\": \"${mode}\"\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"type\": \"update\",\r\n            \"parameters\": {\r\n                \"actionType\": \"APPEND\",\r\n                \"filter\": {\r\n                    \"type\": \"Streetlight\",\r\n                    \"q\": \"refStreetlightControlCabinet:${id};status:ok\"\r\n                },\r\n                \"version\": 2,\r\n                \"attributes\": [\r\n                    {\r\n                        \"name\": \"workingMode\",\r\n                        \"type\": \"Text\",\r\n                        \"value\": \"${mode}\"\r\n                    },\r\n                    {\r\n                        \"name\": \"dateLastCommanded\",\r\n                        \"type\": \"DateTime\",\r\n                        \"value\": \"${timeinstant}\"\r\n                    },\r\n                    {\r\n                        \"name\": \"lastCommanderMessage\",\r\n                        \"type\": \"Text\",\r\n                        \"value\": \"Cambio de modo del cuadro ${id} a ${mode}\"\r\n                    },\r\n                    {\r\n                        \"name\": \"lastCommander\",\r\n                        \"type\": \"Text\",\r\n                        \"value\": \"${ruleName}\"\r\n                    },\r\n                    {\r\n                        \"name\": \"commandTimeinstant\",\r\n                        \"value\": \"${timeinstant}\",\r\n                        \"type\": \"DateTime\"\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    ],\r\n    \"subservice\": \"/alumbrado\",\r\n    \"service\": \"alcobendas\"\r\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CEP}}/rules",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CEP}}"
							],
							"path": [
								"rules"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create rule (ausencia ESPER)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "       {\r\n            \"name\": \"ausencia_coche\",\r\n            \"text\": \"SELECT *, a.id as identificador, a.type as tipo,  current_timestamp().format(\\\"yyyy-MM-dd'T'HH:mm:ssX\\\") as timeinstant FROM PATTERN [ EVERY a=iotEvent(a.subservice = '/pruebas') -> (timer:interval(10 sec) AND NOT b=iotEvent (a.id is b.id))]\",\r\n            \"action\": {\r\n                \"type\": \"update\",\r\n                \"parameters\": {\r\n                    \"id\": \"${identificador}\",\r\n                    \"type\":\"${tipo}\",\r\n                    \"attributes\": [\r\n                        {\r\n                            \"name\": \"TimeInstant\",\r\n                            \"type\": \"DateTime\",\r\n                            \"value\": \"${timeinstant}\"\r\n                        }\r\n                    ]\r\n                }\r\n            }\r\n        }"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CEP}}/rules",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CEP}}"
							],
							"path": [
								"rules"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create rule (ausencia nosignal)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"ausencia_medida\",\r\n    \"action\": [\r\n        {\r\n            \"type\": \"update\",\r\n            \"parameters\": {\r\n                \"name\": \"status\",\r\n                \"value\": \"off\",\r\n                \"actionType\": \"APPEND\"\r\n            }\r\n        },\r\n        {\r\n            \"type\": \"email\",\r\n            \"template\": \"La entidad ${id} ha dejado de enviar datos\",\r\n            \"parameters\": {\r\n                \"to\": \"anovo@gmail.com\",\r\n                \"from\": \"soporte@urbo2.es\",\r\n                \"subject\": \"[ALARMA] Incomunicaci√≥n\"\r\n            }\r\n        }\r\n    ],\r\n    \"nosignal\": {\r\n        \"checkInterval\": \"30\",\r\n        \"attribute\": \"temperature\",\r\n        \"reportInterval\": \"14400\",\r\n        \"idRegexp\": \".*\",\r\n        \"type\": \"WheatherObserved\"\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CEP}}/rules",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CEP}}"
							],
							"path": [
								"rules"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create rule (actualiza otro subservicio)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "        {\r\n            \"name\": \"alarm_luminosity\",\r\n            \"description\": \"Crea una alarma si la luminosidad baja de 20\",\r\n            \"text\": \"select \\\"alarm_luminosity\\\" as ruleName, *, municipality?, luminosity?, location__lat? as lati, location__lon? as longi, current_timestamp().format(\\\"yyyy-MM-dd'T'HH:mm:ss.SSSX\\\") as timeinstant from iotEvent where type='Streetlight' and not exists(error_alarma_lampara?) and cast(powerState?, String) = \\\"on\\\" and cast(cast(luminosity?, String), float) <= 20\",\r\n            \"action\": [\r\n                {\r\n                    \"type\": \"update\",\r\n                    \"parameters\": {\r\n                        \"id\": \"malfunction:${id}\",\r\n                        \"type\": \"Alert\",\r\n                        \"version\": 2,\r\n                        \"subservice\": \"/alarmas\",\r\n                        \"attributes\": [\r\n                            {\r\n                                \"name\": \"description\",\r\n                                \"type\": \"Text\",\r\n                                \"value\": \"Lampara fundida. Medida: ${luminosity}\"\r\n                            },\r\n                            {\r\n                                \"name\": \"location\",\r\n                                \"type\": \"geo:json\",\r\n                                \"value\": \"{\\\"type\\\": \\\"Point\\\",\\\"coordinates\\\": [${longi},${lati}]}\"\r\n                            },\r\n                            {\r\n                                \"name\": \"sourceType\",\r\n                                \"type\": \"Text\",\r\n                                \"value\": \"${type}\"\r\n                            },\r\n                            {\r\n                                \"name\": \"severity\",\r\n                                \"type\": \"Text\",\r\n                                \"value\": \"Medium\"\r\n                            },\r\n                            {\r\n                                \"name\": \"category\",\r\n                                \"type\": \"Text\",\r\n                                \"value\": \"malfunction\"\r\n                            },\r\n                            {\r\n                                \"name\": \"source\",\r\n                                \"type\": \"Text\",\r\n                                \"value\": \"${id}\"\r\n                            },\r\n                            {\r\n                                \"name\": \"alertSource\",\r\n                                \"type\": \"Text\",\r\n                                \"value\": \"${subservice}\"\r\n                            },\r\n                            {\r\n                                \"name\": \"dateIssued\",\r\n                                \"type\": \"DateTime\",\r\n                                \"value\": \"${timeinstant}\"\r\n                            },\r\n                            {\r\n                                \"name\": \"TimeInstant\",\r\n                                \"type\": \"DateTime\",\r\n                                \"value\": \"${timeinstant}\"\r\n                            },\r\n                            {\r\n                                \"name\": \"status\",\r\n                                \"type\": \"Text\",\r\n                                \"value\": \"active\"\r\n                            },\r\n                            {\r\n                                \"name\": \"municipality\",\r\n                                \"type\": \"Text\",\r\n                                \"value\": \"${municipality}\"\r\n                            }\r\n                        ],\r\n                        \"actionType\": \"append\"\r\n                    }\r\n                },\r\n                {\r\n                    \"type\": \"update\",\r\n                    \"parameters\": {\r\n                        \"id\": \"${id}\",\r\n                        \"type\": \"Streetlight\",\r\n                        \"version\": 2,\r\n                        \"attributes\": [\r\n                            {\r\n                                \"name\": \"Error-alarma_lampara\",\r\n                                \"type\": \"Text\",\r\n                                \"value\": \"true\"\r\n                            },\r\n                            {\r\n                                \"name\": \"error_alarma_lampara\",\r\n                                \"type\": \"Text\",\r\n                                \"value\": \"true\"\r\n                            }\r\n                        ],\r\n                        \"actionType\": \"append\"\r\n                    }\r\n                }\r\n            ]\r\n        }"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CEP}}/rules",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CEP}}"
							],
							"path": [
								"rules"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create rule (HTTP POST - activar riego electrovalvula)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"streetlight_column_alarm_with_mail\",\n    \"text\": \"select ev.illuminanceLevel? as ilumLevel, ev.id? as id, ev.status? as laststatus, ev.powerState? as powerState, ev.areaServed? as areaServed, ev.dateLastLampChange__iso? as lastchange, ev.address__streetAddress? as streetAddress, ev.address__addressLocality? as addressLocality, ev.address__addressCountry? as addressCountry, ev.address__postalCode? as postalCode, \\\"streetlight_column_alarm_with_mail\\\" as ruleName from pattern [every ev=iotEvent(type='Streetlight' and ev.status? = 'columnIssue')]\",\n    \"action\": [\n        {\n            \"action\": {\n                \"type\": \"post\",\n                \"template\": \"{\\\"type\\\":\\\"command\\\",\\\"value\\\":1}\",\n                \"parameters\": {\n                    \"url\": \"http://10.0.0.2:1026/v2/entities/${electrovalveId}/attrs/activate?type=electrovalve\",\n                    \"method\": \"PUT\",\n                    \"headers\": {\n                        \"Content-type\": \"application/json\",\n                        \"fiware-service\": \"${service}\",\n                        \"fiware-servicepath\": \"${subservice}\"\n                    }\n                }\n            }\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CEP}}/rules",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CEP}}"
							],
							"path": [
								"rules"
							]
						},
						"description": "Adds a rule to CEP"
					},
					"response": []
				},
				{
					"name": "Create rule _Timer (10 sec)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"calcula_ocaso_orto\",\n    \"text\": \"select ((ca.rmen.sunrisesunset.SunriseSunset.getSunriseSunset(java.util.Calendar.getInstance(), 48.85837, 2.294481)).get(0)).getTime() as Sunrise, ((ca.rmen.sunrisesunset.SunriseSunset.getSunriseSunset(java.util.Calendar.getInstance(), 48.85837, 2.294481)).get(1)).getTime() as Sunset from iotEvent where type = 'Streetlight'\",\n    \"action\": {\n        \"type\": \"update\",\n        \"parameters\": {\n            \"version\": 2,\n            \"id\": \"${id}\",\n            \"type\":\"${type}\",\n            \"attributes\": [\n                {\n                    \"name\": \"orto\",\n                    \"type\": \"Mitipo\",\n                    \"value\": \"${Sunrise}\"\n                },\n                {\n                    \"name\": \"ocaso\",\n                    \"type\": \"Mitipo\",\n                    \"value\": \"${Sunset}\"\n                }\n            ],\n            \"actionType\": \"update\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CEP}}/rules",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CEP}}"
							],
							"path": [
								"rules"
							]
						},
						"description": "Adds a rule to CEP"
					},
					"response": []
				},
				{
					"name": "Create rule _Timer. Same precise minute in every hour",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"Timer_example\",\n\t\"text\":\"select *, current_timestamp.toDate() as currentTS, \\\"Timer_example\\\" as ruleName from pattern [every timer:at(20, *, *, *, *)]\",\n\t\"action\": [{\n\t\t\"type\":\"update\",\n\t\t\"parameters\":{\n\t\t\t\"id\":\"timer_example_min_2\",\n\t\t\t\"attributes\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\":\"timestamp\",\n\t\t\t\t\t\"type\": \"Text\",\n\t\t\t\t\t\"value\": \"${currentTS}\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}]\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CEP}}/rules",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CEP}}"
							],
							"path": [
								"rules"
							]
						},
						"description": "Adds a rule to CEP"
					},
					"response": []
				},
				{
					"name": "Create rule (contaminaci√≥n en dos o mas estaciones)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"contaminacion\",\n    \"text\": \"SELECT \\\"contaminacion\\\" as ruleName, Window(id?, filter: (cast(cast(now?,string),float)>100 and cast(cast(old?, string),float)>100)) as alarmas FROM iotEvent.std:unique(id?) HAVING count(Window(*), filter: (cast(cast(now?,string),float)>100 and cast(cast(old?, string),float)>100))>1 and (cast(cast(now?,string),float)>100 and cast(cast(old?, string),float)>100)\",\n                \"action\": {\n        \"type\": \"update\",\n        \"parameters\": {\n            \"id\": \"TestEntiti1\",\n            \"type\": \"TestEntity\",\n            \"attributes\": [\n              {\n                              \"name\": \"msg\",\n                              \"value\": \"contaminaci√≥n en ${alarmas}\"\n              }\n            ]\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CEP}}/rules",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CEP}}"
							],
							"path": [
								"rules"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create rule (encender electrovalvula)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Fiware-Service",
								"value": "demo"
							},
							{
								"key": "fiware-servicepath",
								"value": "/"
							},
							{
								"key": "x-auth-token",
								"value": "d5f8f78511fd43a4822b7ceee0d1af88"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"action\":{\n      \"type\":\"post\",\n      \"template\":\"{\\\"type\\\":\\\"command\\\",\\\"value\\\":1}\",\n      \"parameters\":{\n         \"url\": \"http://10.0.0.2:1026/v2/entities/${electrovalveId}/attrs/activate?type=electrovalve\",\n         \"method\": \"PUT\",\n         \"headers\": {\n            \"Content-type\": \"application/json\",\n            \"fiware-service\": \"${service}\",\n            \"fiware-servicepath\": \"${subservice}\"\n         }\n      }\n   },\n  \"text\": \"select *,\\\"electrovalve_on\\\" as ruleName from pattern [every ev=iotEvent((cast(cast(`humidity`?,String),float))<25 and type=\\\"humiditySensor\\\")]\",\n  \"name\": \"electrovalve_on\"\n}"
						},
						"url": {
							"raw": "https://{{ENDPOINT_CEP}}/rules",
							"protocol": "https",
							"host": [
								"{{ENDPOINT_CEP}}"
							],
							"path": [
								"rules"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create rule (vaciado contenedores)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"vaciado_contenedores\",\n    \"text\": \"select *, \\\"vaciado_contenedores\\\" as ruleName, avg(cast(cast(fillLevel?,String),float)) as mediallenado, fillLevel? as ultimollenado, current_timestamp().format(\\\"yyyy-MM-dd'T'HH:mm:ss.SSSX\\\") as formatedts, window(fillLevel?) as ventana from iotEvent.std:groupwin(id).win:length(5) group by id having window(cast(cast(fillLevel?,String),float)).take(3).max()>40 and window(cast(cast(fillLevel?,String),float)).takeLast(2).min()<10\",\n    \"action\": [\n        {\n            \"type\": \"update\",\n            \"parameters\": {\n                \"id\": \"${id}\",\n                \"type\": \"contenedor\",\n                \"attributes\": [\n                    {\n                        \"name\": \"dateLastEmptying \",\n                        \"value\": \"${formatedts}\",\n                        \"type\": \"DateTime\"\n                    }\n                ]\n            }\n        },\n        {\n            \"type\": \"email\",\n            \"template\": \"Se ha recogido el contenedor ${id} con fecha ${formatedts}\",\n            \"parameters\": {\n                \"to\": \"alberto.novolobato@telefonica.com\",\n                \"from\": \"no-reply@iotplatform.telefonica.com\",\n                \"subject\": \"Recogida de contenedor ${id} ${servicePath}\"\n            }\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CEP}}/rules",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CEP}}"
							],
							"path": [
								"rules"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create rule (desbordamiento contenedores))",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"alarmfillingresse\",\n    \"action\": {\n        \"type\": \"email\",\n        \"template\": \"El contenedor ${id} del Municipio ${isleId} est√° a punto de desbordar. √öltimo nivel de llenado ${fillingLevelPercentage}% a las ${TimeInstant}\",\n        \"parameters\": {\n            \"to\": \"alberto.novolobato@telefonica.com\",\n            \"from\": \"no-reply@iotplatform.telefonica.com\",\n            \"subject\": \"Alarma llenado en el contenedor ${id} del Municipio ${isleId} en Segovia\"\n        }\n    },\n    \"text\": \"select *,\\\"alarmfillingresse\\\" as ruleName , Math.round(cast(cast(ev.fillingLevel?, string),float) * 100) as fillingLevelPercentage, ev.isleId? as iselId from pattern [every ev=iotEvent((cast(`type`?, String)  =  \\\"WasteContainer\\\") AND (cast(cast(`fillingLevel`?, String), float)  >  0.9))]\"\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CEP}}/rules",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CEP}}"
							],
							"path": [
								"rules"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create rule MatchRecognize (3 fails in the same area)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"Area_Alert\",\n\t\"text\":\"select *, \\\"Area_Alert\\\" as ruleName FROM iotEvent(type='Streetlight').win:time(1 minute) MATCH_RECOGNIZE(measures A.areaServed? as areaServed, C.dateLastLampChange__iso? as lastchange, A.id? as idA, B.id? as idB, C.id? as idC pattern (A B C) define A as A.status? = 'defectiveLamp', B as B.status? = 'defectiveLamp', C as C.status? = 'defectiveLamp' and B.id? != A.id? and B.id? != C.id? and A.id? != C.id? and B.areaServed? = A.areaServed? and B.areaServed? = C.areaServed?)\",\n\t\"action\": [{\n\t\t\"type\":\"update\",\n\t\t\"parameters\":{\n\t\t\t\"id\":\"area_alert_${areaServed}\",\n\t\t\t\"type\":\"AreaAlert\",\n\t\t\t\"version\": \"2\",\n\t\t\t\"attributes\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\":\"area\",\n\t\t\t\t\t\"type\": \"Text\",\n\t\t\t\t\t\"value\": \"${areaServed}\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\":\"lastchange\",\n\t\t\t\t\t\"type\": \"DateTime\",\n\t\t\t\t\t\"value\": \"${lastchange}\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\":\"streetLights\",\n\t\t\t\t\t\"type\": \"StructuredValue\",\n\t\t\t\t\t\"value\": \"[${idA}, ${idB}, ${idC}]\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}]\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CEP}}/rules",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CEP}}"
							],
							"path": [
								"rules"
							]
						},
						"description": "Adds a rule to CEP"
					},
					"response": []
				},
				{
					"name": "Create rule (Calcula Ocaso-orto)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"calcula_ocaso_orto\",\n    \"text\": \"select ((ca.rmen.sunrisesunset.SunriseSunset.getSunriseSunset(java.util.Calendar.getInstance(), 48.85837, 2.294481)).get(0)).getTime() as Sunrise, ((ca.rmen.sunrisesunset.SunriseSunset.getSunriseSunset(java.util.Calendar.getInstance(), 48.85837, 2.294481)).get(1)).getTime() as Sunset from iotEvent where type = 'Streetlight'\",\n    \"action\": {\n        \"type\": \"update\",\n        \"parameters\": {\n            \"version\": 2,\n            \"id\": \"${id}\",\n            \"type\":\"${type}\",\n            \"attributes\": [\n                {\n                    \"name\": \"orto\",\n                    \"type\": \"Mitipo\",\n                    \"value\": \"${Sunrise}\"\n                },\n                {\n                    \"name\": \"ocaso\",\n                    \"type\": \"Mitipo\",\n                    \"value\": \"${Sunset}\"\n                }\n            ],\n            \"actionType\": \"update\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CEP}}/rules",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CEP}}"
							],
							"path": [
								"rules"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create rule (Anochecer)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-auth-token",
								"type": "text",
								"value": "{{TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"anochecer\",\n    \"text\": \"select \\\"schedule_ocaso\\\" as ruleName, *, current_timestamp().format(\\\"yyyy-MM-dd'T'HH:mm:ss.SSSX\\\") as timeinstant from pattern [every timer:interval(((getMilisToNextSunset(java.util.Calendar.getInstance(), 37.993446, -1.130605)))/1000 sec)]\",\n            \"action\": [\n                {\n                    \"type\": \"update\",\n                    \"parameters\": {\n                        \"filter\": {\n                            \"type\": \"Streetlight\"\n                        },\n                        \"version\": 2,\n                        \"attributes\": [\n                            {\n                                \"name\": \"switchOnOff\",\n                                \"type\": \"command\",\n                                \"value\": \"1\"\n                            }\n                        ]\n                    }\n                },\n                {\n                    \"type\": \"email\",\n                    \"template\": \"Se han encendido las farolas a las ${timeinstant}\",\n                    \"parameters\": {\n                        \"to\": \"macs@tid.es\",\n                        \"from\": \"soporte@urbo2.es\",\n                        \"subject\": \"Se han encendido las farolas\"\n                    }\n                }\n            ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CEP}}/rules",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CEP}}"
							],
							"path": [
								"rules"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create rule (potencia con funcion)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"regla_carlos\",\r\n    \"text\": \"select current_timestamp() as time, ((x-Tini)(Ymax-Ymin))/(Tfin-Tini) + Ymin as potencia, getNextSunset(java.util.Calendar.getInstance(), 37.993446, -1.130605).format(\\\"yyyy-MM-dd'T'HH:mm:ss.SSSX\\\") as sunset from pattern [every timer:at(18,*,*,*,*) -> every timer:schedule(repetitions: 10, date: getNextSunset(java.util.Calendar.getInstance(), 37.993446, -1.130605).toMillisec(), period: 10 minutes)]\",\r\n    \"action\": {\r\n        \"type\": \"update\",\r\n        \"parameters\": {\r\n            \"id\": \"coche${time}\",\r\n            \"type\": \"coche\",\r\n            \"attributes\": [\r\n                {\r\n                    \"name\": \"potencia\",\r\n                    \"value\": \"${potencia}\"\r\n                },\r\n                {\r\n                    \"name\": \"sunset\",\r\n                    \"value\": \"${sunset}\"\r\n                },\r\n                {\r\n                    \"name\": \"timestamp\",\r\n                    \"value\": \"${timestamp}\"\r\n                }                \r\n            ]\r\n        }\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CEP}}/rules",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CEP}}"
							],
							"path": [
								"rules"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create rule (Apaga luminarias si cuadro se apaga)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "       {\r\n            \"name\": \"apaga_luminarias_cuadro\",\r\n            \"text\": \"select \\\"apaga_luminarias_cuadro\\\" as ruleName, *, current_timestamp().format(\\\"yyyy-MM-dd'T'HH:mm:ssX\\\") as timeinstant from iotEvent.std:groupwin(id).win:length(2) group by id having cast(window(powerState?).firstOf(),string).toUpperCase() = 'ON' and cast(window(powerState?).lastOf(),string).toUpperCase() = 'OFF' \",\r\n            \"action\": [\r\n                {\r\n                    \"type\": \"update\",\r\n                    \"parameters\": {\r\n                        \"filter\": {\r\n                            \"type\": \"Streetlight\",\r\n                            \"q\": \"refStreetlightControlCabinet:${id}\"\r\n                        },\r\n                        \"version\": 2,\r\n                        \"attributes\": [\r\n                            {\r\n                                \"name\": \"dateLastCommanded\",\r\n                                \"type\": \"DateTime\",\r\n                                \"value\": \"${timeinstant}\"\r\n                            },\r\n                            {\r\n                                \"name\": \"lastCommander\",\r\n                                \"type\": \"Text\",\r\n                                \"value\": \"manualmente\"\r\n                            },\r\n                            {\r\n                                \"name\": \"commandTimeinstant\",\r\n                                \"value\": \"${timeinstant}\"\r\n                            }\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    \"type\": \"update\",\r\n                    \"parameters\": {\r\n                        \"filter\": {\r\n                            \"type\": \"Streetlight\",\r\n                            \"q\": \"refStreetlightControlCabinet:${id}\"\r\n                        },\r\n                        \"version\": 2,\r\n                        \"actionType\": \"UPDATE\",\r\n                        \"attributes\": [\r\n                            {\r\n                                \"name\": \"powerState\",\r\n                                \"type\": \"text\",\r\n                                \"value\": \"off\"\r\n                            },\r\n                            {\r\n                                \"name\": \"setIlluminanceLevel\",\r\n                                \"type\": \"Command\",\r\n                                \"value\": 0\r\n                            },\r\n                            {\r\n                                \"name\": \"illuminanceLevel\",\r\n                                \"type\": \"Number\",\r\n                                \"value\": 0\r\n                            }\r\n                        ]\r\n                    }\r\n                }\r\n            ]\r\n        }"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CEP}}/rules",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CEP}}"
							],
							"path": [
								"rules"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create rule (Regla de cocinado de conteo de vehiculos)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"corrige_errores_camaras\",\r\n    \"description\": \"Corrige errores de detecci√≥n de las camaras en base a unos parametros de correci√≥n horarios por franjas\",\r\n    \"text\": \"expression DOUBLE {(val)=> case when val is null or cast(cast(val,string),double) < 0 or cast(val,string) = '' then 0 else cast(cast(val,string),double) end } expression TS alias for {cast(cast(TimeInstant?, String), long,dateformat:'iso')} expression RD alias for {DOUBLE(ratioDay?)} expression RN alias for {DOUBLE(ratioNigth?)} expression RT alias for {DOUBLE(ratioTwiglight?)} expression LAT alias for {cast(cast(location__lat?,string),double)} expression LON alias for {cast(cast(location__lon?,string),double)} expression MILISTOORTO alias for {getNextSunrise(java.util.Calendar.getInstance(),39, 2).toMillisec()} expression MILISTOOCASO alias for {getNextSunset(java.util.Calendar.getInstance(),39, 2).toMillisec()} expression TWTHRESOLD alias for {case when threshold? is null then 60*60*1000 else DOUBLE(threshold?) end } expression ONEDAY alias for {24*60*60*1000} expression ISNIGHT { (ts)=> MILISTOOCASO>MILISTOORTO and (ts-(MILISTOOCASO-ONEDAY))>TWTHRESOLD and (MILISTOORTO-ts)>TWTHRESOLD } expression ISDAY { (ts)=> MILISTOORTO>MILISTOOCASO and (ts-(MILISTOORTO-ONEDAY))>TWTHRESOLD and (MILISTOOCASO-ts)>TWTHRESOLD } expression CALCULATED {(n,rd,rn,rt,ts)=> case when ISDAY(ts) then n*(1+rd) else case when ISNIGHT(ts) then n*(1+rn) else n*(1+rt) end end } select *, CALCULATED(DOUBLE(carNumberAscending?), RD,RN,RT, TS) as ascendingCar, CALCULATED(DOUBLE(carNumberDescending?), RD,RN,RT, TS) as descendingCar, CALCULATED(DOUBLE(carNumberAscending?)+DOUBLE(carNumberDescending?), RD,RN,RT, TS) as totalCar, CALCULATED(DOUBLE(lorryNumberAscending?), RD,RN,RT, TS) as ascendingLorry, CALCULATED(DOUBLE(lorryNumberDescending?), RD,RN,RT, TS) as descendingLorry, CALCULATED(DOUBLE(lorryNumberAscending?)+DOUBLE(lorryNumberDescending?), RD,RN,RT, TS) as totalLorry, CALCULATED(DOUBLE(bicycleNumberAscending?), RD,RN,RT, TS) as ascendingBicycle, CALCULATED(DOUBLE(bicycleNumberDescending?), RD,RN,RT, TS) as descendingBicycle, CALCULATED(DOUBLE(bicycleNumberAscending?)+DOUBLE(bicycleNumberDescending?), RD,RN,RT, TS) as totalBicycle, CALCULATED(DOUBLE(motorbikeNumberAscending?), RD,RN,RT, TS) as ascendingMotorbike, CALCULATED(DOUBLE(motorbikeNumberDescending?), RD,RN,RT, TS) as descendingMotorbike, CALCULATED(DOUBLE(motorbikeNumberAscending?)+DOUBLE(motorbikeNumberDescending?), RD,RN,RT, TS) as totalMotorbike, CALCULATED(DOUBLE(carNumberAscending?)+DOUBLE(carNumberDescending?)+DOUBLE(lorryNumberAscending?)+DOUBLE(lorryNumberDescending?)+DOUBLE(bicycleNumberAscending?)+DOUBLE(bicycleNumberDescending?)+DOUBLE(motorbikeNumberAscending?)+DOUBLE(motorbikeNumberDescending?), RD,RN,RT, TS) as totalVehicles, current_timestamp().format(\\\"yyyy-MM-dd'T'HH:mm:ss.SSSX\\\") as timeinstant, ISDAY(TS) as dia, ISNIGHT(TS) as noche, MILISTOORTO as orto, MILISTOOCASO as ocaso, TS as ts, LAT as lat, LON as lon from iotEvent where type = 'VehiclesCounter'\",\r\n    \"action\": {\r\n        \"type\": \"update\",\r\n        \"parameters\": {\r\n            \"version\": 2,\r\n            \"attributes\": [\r\n                {\r\n                    \"name\": \"calculatedCarNumberAscending\",\r\n                    \"type\": \"Number\",\r\n                    \"value\": \"${ascendingCar}\"\r\n                },\r\n                {\r\n                    \"name\": \"calculatedCarNumberDescending\",\r\n                    \"type\": \"Number\",\r\n                    \"value\": \"${descendingCar}\"\r\n                },\r\n                {\r\n                    \"name\": \"calculatedCarNumber\",\r\n                    \"type\": \"Number\",\r\n                    \"value\": \"${totalCar}\"\r\n                },\r\n                {\r\n                    \"name\": \"calculatedLorryNumberAscending\",\r\n                    \"type\": \"Number\",\r\n                    \"value\": \"${ascendingLorry}\"\r\n                },\r\n                {\r\n                    \"name\": \"calculatedLorryNumberDescending\",\r\n                    \"type\": \"Number\",\r\n                    \"value\": \"${descendingLorry}\"\r\n                },\r\n                {\r\n                    \"name\": \"calculatedLorryNumber\",\r\n                    \"type\": \"Number\",\r\n                    \"value\": \"${totalLorry}\"\r\n                },\r\n                {\r\n                    \"name\": \"calculatedBicycleNumberAscending\",\r\n                    \"type\": \"Number\",\r\n                    \"value\": \"${ascendingBicycle}\"\r\n                },\r\n                {\r\n                    \"name\": \"calculatedBicycleNumberDescending\",\r\n                    \"type\": \"Number\",\r\n                    \"value\": \"${descendingBicycle}\"\r\n                },\r\n                {\r\n                    \"name\": \"calculatedBicycleNumber\",\r\n                    \"type\": \"Number\",\r\n                    \"value\": \"${totalBicycle}\"\r\n                },\r\n                {\r\n                    \"name\": \"calculatedMotorbikeNumberAscending\",\r\n                    \"type\": \"Number\",\r\n                    \"value\": \"${ascendingMotorbike}\"\r\n                },\r\n                {\r\n                    \"name\": \"calculatedMotorbikeNumberDescending\",\r\n                    \"type\": \"Number\",\r\n                    \"value\": \"${descendingMotorbike}\"\r\n                },\r\n                {\r\n                    \"name\": \"calculatedMotorbikeNumber\",\r\n                    \"type\": \"Number\",\r\n                    \"value\": \"${totalMotorbike}\"\r\n                },\r\n                {\r\n                    \"name\": \"calculatedVehiclesNumber\",\r\n                    \"type\": \"Number\",\r\n                    \"value\": \"${totalVehicles}\"\r\n                },\r\n                {\r\n                    \"name\": \"dateCalculatedVehiclesNumber\",\r\n                    \"type\": \"DateTime\",\r\n                    \"value\": \"${timeinstant}\"\r\n                },\r\n                {\r\n                    \"name\": \"orto\",\r\n                    \"type\": \"Text\",\r\n                    \"value\": \"${orto}\"\r\n                },\r\n                {\r\n                    \"name\": \"ocaso\",\r\n                    \"type\": \"Text\",\r\n                    \"value\": \"${ocaso}\"\r\n                },\r\n                {\r\n                    \"name\": \"isday\",\r\n                    \"type\": \"Text\",\r\n                    \"value\": \"${dia}\"\r\n                },\r\n                {\r\n                    \"name\": \"isnight\",\r\n                    \"type\": \"Text\",\r\n                    \"value\": \"${noche}\"\r\n                }\r\n            ]\r\n        }\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CEP}}/rules",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CEP}}"
							],
							"path": [
								"rules"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete rule",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CEP}}/rules/LowTemperature",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CEP}}"
							],
							"path": [
								"rules",
								"LowTemperature"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get rules",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							}
						],
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CEP}}/rules",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CEP}}"
							],
							"path": [
								"rules"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a rule",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Fiware-Service",
								"value": "{{SERVICE}}"
							},
							{
								"key": "Fiware-ServicePath",
								"value": "{{SUBSERVICE}}"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{TOKEN}}"
							}
						],
						"url": {
							"raw": "{{PROTOCOL}}://{{ENDPOINT_CEP}}/rules/LowTemperature",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{ENDPOINT_CEP}}"
							],
							"path": [
								"rules",
								"LowTemperature"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "CKAN",
			"item": [
				{
					"name": "SHOW Organization",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{CKAN_APIKEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n       \"name\": \"city012\"\n}"
						},
						"url": {
							"raw": "https://{{ENDPOINT_CKAN}}/api/3/action/organization_show?id=alcobendas&include_datasets=true",
							"protocol": "https",
							"host": [
								"{{ENDPOINT_CKAN}}"
							],
							"path": [
								"api",
								"3",
								"action",
								"organization_show"
							],
							"query": [
								{
									"key": "id",
									"value": "alcobendas"
								},
								{
									"key": "include_datasets",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CREATE Organization",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{CKAN_APIKEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n       \"name\": \"city012\"\n}"
						},
						"url": {
							"raw": "https://{{ENDPOINT_CKAN}}/api/3/action/organization_create",
							"protocol": "https",
							"host": [
								"{{ENDPOINT_CKAN}}"
							],
							"path": [
								"api",
								"3",
								"action",
								"organization_create"
							]
						}
					},
					"response": []
				},
				{
					"name": "CREATE Package",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{CKAN_APIKEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"name\": \"city011_electricidad\",\n        \"owner_org\": \"city011\"\n}"
						},
						"url": {
							"raw": "https://{{ENDPOINT_CKAN}}/api/3/action/package_create",
							"protocol": "https",
							"host": [
								"{{ENDPOINT_CKAN}}"
							],
							"path": [
								"api",
								"3",
								"action",
								"package_create"
							]
						}
					},
					"response": []
				},
				{
					"name": "SHOW Package",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{ENDPOINT_CKAN}}/api/3/action/package_show?id=city012_electricidad",
							"protocol": "https",
							"host": [
								"{{ENDPOINT_CKAN}}"
							],
							"path": [
								"api",
								"3",
								"action",
								"package_show"
							],
							"query": [
								{
									"key": "id",
									"value": "city012_electricidad"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CREATE Resource",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{CKAN_APIKEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"name\": \"room008_room\",\n   \"url\": \"http://foo.bar/newresourcecol\",\n   \"package_id\": \"29bbbd3c-bedc-4dd0-8f6d-5563257f500f\"\n}\n"
						},
						"url": {
							"raw": "https://{{ENDPOINT_CKAN}}/api/3/action/resource_create",
							"protocol": "https",
							"host": [
								"{{ENDPOINT_CKAN}}"
							],
							"path": [
								"api",
								"3",
								"action",
								"resource_create"
							]
						}
					},
					"response": []
				},
				{
					"name": "SHOW Resource",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"id\":\"c4e70608-1ce7-4f00-8f5c-76174c0f1274\"}\n"
						},
						"url": {
							"raw": "https://{{ENDPOINT_CKAN}}/api/3/action/resource_show",
							"protocol": "https",
							"host": [
								"{{ENDPOINT_CKAN}}"
							],
							"path": [
								"api",
								"3",
								"action",
								"resource_show"
							]
						}
					},
					"response": []
				},
				{
					"name": "CREATE Datastore",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{CKAN_APIKEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"resource_id\": \"7a3d459d-39ba-43c8-ab6c-7d77caed988a\",\n    \"fields\": [\n        {\n            \"id\": \"recvTime\",\n            \"type\": \"timestamp\"\n        },\n        {\n            \"id\": \"fiwareServicePath\",\n            \"type\": \"json\"\n        },\n        {\n            \"id\": \"entityType\",\n            \"type\": \"json\"\n        },\n        {\n            \"id\": \"entityId\",\n            \"type\": \"json\"\n        },\n        {\n            \"id\": \"address\",\n            \"type\": \"json\"\n        },\n        {\n            \"id\": \"controllingMethod\",\n            \"type\": \"json\"\n        },\n        {\n            \"id\": \"dateLastSwitchingOff\",\n            \"type\": \"json\"\n        },\n        {\n            \"id\": \"dateLastSwitchingOff_md\",\n            \"type\": \"json\"\n        },\n        {\n            \"id\": \"dateLastSwitchingOn\",\n            \"type\": \"json\"\n        },\n        {\n            \"id\": \"dateLastSwitchingOn_md\",\n            \"type\": \"json\"\n        },\n        {\n            \"id\": \"description\",\n            \"type\": \"json\"\n        },\n        {\n            \"id\": \"illuminanceLevel\",\n            \"type\": \"json\"\n        },\n        {\n            \"id\": \"illuminanceLevel_md\",\n            \"type\": \"json\"\n        },\n        {\n            \"id\": \"location\",\n            \"type\": \"json\"\n        },\n        {\n            \"id\": \"location_md\",\n            \"type\": \"json\"\n        },\n        {\n            \"id\": \"luminosity\",\n            \"type\": \"json\"\n        },\n        {\n            \"id\": \"luminosity_md\",\n            \"type\": \"json\"\n        },\n        {\n            \"id\": \"manufacturerName\",\n            \"type\": \"json\"\n        },\n        {\n            \"id\": \"powerState\",\n            \"type\": \"json\"\n        },\n        {\n            \"id\": \"powerState_md\",\n            \"type\": \"json\"\n        },\n        {\n            \"id\": \"refStreetlightControlCabinet\",\n            \"type\": \"json\"\n        },\n        {\n            \"id\": \"refStreetlightGroup\",\n            \"type\": \"json\"\n        },\n        {\n            \"id\": \"serialNumber\",\n            \"type\": \"json\"\n        },\n        {\n            \"id\": \"status\",\n            \"type\": \"json\"\n        },\n        {\n            \"id\": \"status_md\",\n            \"type\": \"json\"\n        },\n        {\n            \"id\": \"workingMode\",\n            \"type\": \"json\"\n        },\n        {\n            \"id\": \"TimeInstant\",\n            \"type\": \"json\"\n        },\n        {\n            \"id\": \"TimeInstant_md\",\n            \"type\": \"json\"\n        },\n        {\n            \"id\": \"dateLastProgramming\",\n            \"type\": \"json\"\n        },\n        {\n            \"id\": \"dateLastProgramming_md\",\n            \"type\": \"json\"\n        }\n    ],\n    \"force\": \"true\"\n}"
						},
						"url": {
							"raw": "https://{{ENDPOINT_CKAN}}/api/3/action/datastore_create",
							"protocol": "https",
							"host": [
								"{{ENDPOINT_CKAN}}"
							],
							"path": [
								"api",
								"3",
								"action",
								"datastore_create"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Datastore",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{CKAN_APIKEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"id\": \"0c6ae629-1d53-4483-83d7-57a538809f50\"\n}"
						},
						"url": {
							"raw": "https://{{ENDPOINT_CKAN}}/api/3/action/datastore_info",
							"protocol": "https",
							"host": [
								"{{ENDPOINT_CKAN}}"
							],
							"path": [
								"api",
								"3",
								"action",
								"datastore_info"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE Datastore",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{CKAN_APIKEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"resource_id\": \"16067f41-ac02-49fd-b6a0-0b49d2217763\",\n   \"force\": \"true\"\n}"
						},
						"url": {
							"raw": "https://{{ENDPOINT_CKAN}}/api/3/action/datastore_delete",
							"protocol": "https",
							"host": [
								"{{ENDPOINT_CKAN}}"
							],
							"path": [
								"api",
								"3",
								"action",
								"datastore_delete"
							]
						}
					},
					"response": []
				},
				{
					"name": "INSERT Data",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{CKAN_APIKEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"resource_id\": \"9fee01f9-7f43-4013-b90f-c437a91a1066\",\n  \"records\": [\n    {\n      \"recvTime\": \"2014-12-05T15:00:02.53\",\n      \"fillLevel\": \"35\",\n      \"temperature\": \"43\"\n    }\n  ],\n  \"method\": \"insert\",\n  \"force\": \"true\"\n}"
						},
						"url": {
							"raw": "https://{{ENDPOINT_CKAN}}/api/3/action/datastore_upsert",
							"protocol": "https",
							"host": [
								"{{ENDPOINT_CKAN}}"
							],
							"path": [
								"api",
								"3",
								"action",
								"datastore_upsert"
							]
						}
					},
					"response": []
				},
				{
					"name": "RETRIEVE DATA",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{CKAN_APIKEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"resource_id\":\"f18c2097-e114-4d4f-821e-7d1f1cbb1c46\",\"q\":\"\",\"filters\":{},\"limit\":100,\"offset\":0}"
						},
						"url": {
							"raw": "https://{{ENDPOINT_CKAN}}/api/3/action/datastore_search",
							"protocol": "https",
							"host": [
								"{{ENDPOINT_CKAN}}"
							],
							"path": [
								"api",
								"3",
								"action",
								"datastore_search"
							]
						}
					},
					"response": []
				},
				{
					"name": "SEARCH Datastore",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{CKAN_APIKEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{ENDPOINT_CKAN}}/api/3/action/datastore_search_sql?sql='SELECT * from a15898b9-db82-44f1-93df-8fbf81c42c45 ORDER BY _id DESC  LIMIT 1'",
							"protocol": "https",
							"host": [
								"{{ENDPOINT_CKAN}}"
							],
							"path": [
								"api",
								"3",
								"action",
								"datastore_search_sql"
							],
							"query": [
								{
									"key": "sql",
									"value": "'SELECT * from a15898b9-db82-44f1-93df-8fbf81c42c45 ORDER BY _id DESC  LIMIT 1'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE RECORDS",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{CKAN_APIKEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"filters\": {\n        \"_id\": [\n            1,\n            2\n        ]\n    },\n    \"force\": \"true\",\n    \"resource_id\": \"a43bfb04-7a8b-4624-a06a-25f4165e5b2a\"\n}"
						},
						"url": {
							"raw": "https://{{ENDPOINT_CKAN}}/api/3/action/datastore_delete",
							"protocol": "https",
							"host": [
								"{{ENDPOINT_CKAN}}"
							],
							"path": [
								"api",
								"3",
								"action",
								"datastore_delete"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}
